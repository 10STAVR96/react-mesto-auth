{"version":3,"sources":["images/logo.svg","images/mobile-menu.svg","images/close-icon.svg","images/edit-avatar-pencil.svg","images/success.svg","images/error.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/ConfirmationPopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ImagePopup.js","utils/utils.js","utils/api.js","utils/formValidator.js","components/MainPage.js","utils/auth.js","components/Register.js","components/Login.js","components/InfoTooltip.js","components/ProtectedRoute.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","loggedIn","loggedInEmail","signOut","headerElement","React","createRef","useState","headerWidth","setHeaderWidth","isMenuOpen","setIsMenuOpen","buttonMenuOpen","className","type","onClick","src","menuClose","menuOpen","alt","nav","path","to","useEffect","current","parentElement","clientWidth","ref","logo","CurrentUserContext","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","key","link","name","length","Main","onEditAvatar","avatar","pencil","about","onEditProfile","onAddPlace","cards","map","onImageClick","Footer","PopupWithForm","id","isOpen","onSubmit","noValidate","method","action","onClose","title","children","submit","EditProfilePopup","nameRef","useRef","descriptionRef","value","e","preventDefault","onUpdateUser","onChange","focus","required","placeholder","pattern","ConfirmationPopup","EditAvatarPopup","avatarRef","onUpdateAvatar","AddPlacePopup","setName","setLink","target","minLength","maxLength","ImagePopup","formElements","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","api","options","this","_baseUrl","baseUrl","_headers","headers","fetch","then","res","ok","json","Promise","reject","status","body","JSON","stringify","authorization","FormValidator","formObject","formName","_formName","_inactiveButtonClass","_inputErrorClass","_errorClass","_inputList","Array","from","querySelectorAll","_buttonSubmit","querySelector","inputElement","errorMessage","errorElement","classList","add","textContent","remove","setAttribute","removeAttribute","validity","valid","_hideInputError","_showInputError","validationMessage","every","_hasInvalidInput","_hideButtonError","_showButtonError","forEach","addEventListener","_toggleButtonState","_checkInputValidity","MainPage","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","isConfirmPopupOpen","setIsConfirmPopupOpen","currentCard","setCurrentCard","setCurrentUser","setCards","cardDelete","setCardDelete","closeAllPopups","all","getProfileInfo","getCards","user","catch","err","console","log","formProfileValidation","document","formAvatarValidation","formCardValidation","enableValidation","Provider","changeLikeStatus","newCard","newCards","c","setProfileUserInfo","setProfileAvatar","addCard","deleteCard","filter","BASE_URL","Register","successInfoToolTip","openInfoToolTip","email","setEmail","password","setPassword","history","useHistory","data","error","auth","setTimeout","push","Login","handleLogin","checkToken","token","localStorage","setItem","InfoTooltip","successStyle","success","ProtectedRoute","Component","component","App","setLoggedIn","setLoggedInEmail","isInfoTooltipOpen","setIsInfoTooltipOpen","setSuccessInfoToolTip","handleSuccessInfoToolTip","handleInfoTooltipOpen","getItem","removeItem","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e2f3f31f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";","module.exports = __webpack_public_path__ + \"static/media/mobile-menu.5df9ea80.svg\";","module.exports = __webpack_public_path__ + \"static/media/close-icon.5df32a06.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit-avatar-pencil.d476a8b8.svg\";","module.exports = __webpack_public_path__ + \"static/media/success.e38b395c.svg\";","module.exports = __webpack_public_path__ + \"static/media/error.4072126c.svg\";","import React from 'react';\r\nimport { NavLink, Route } from 'react-router-dom';\r\nimport logo from '../images/logo.svg';\r\nimport menuOpen from '../images/mobile-menu.svg';\r\nimport menuClose from '../images/close-icon.svg';\r\n\r\nfunction Header(props) {\r\n  const { loggedIn, loggedInEmail, signOut } = props;\r\n  const headerElement = React.createRef();\r\n  const [headerWidth, setHeaderWidth] = React.useState('');\r\n  const [isMenuOpen, setIsMenuOpen] = React.useState(false);\r\n  \r\n  function handleMenu () {\r\n    setIsMenuOpen(!isMenuOpen);\r\n  }\r\n\r\n  const buttonMenuOpen = (\r\n    <button className=\"header__open-menu\" type=\"button\" onClick={handleMenu}>\r\n      <img className=\"header__menu-icon\" src={isMenuOpen ? menuClose : menuOpen} alt=\"инонка меню\" />\r\n    </button>\r\n  );\r\n  const nav = (\r\n    <nav className={loggedIn ? \"header__menu header__menu_mobile\" : \"header__menu\"}>\r\n      <Route path=\"/sign-up\">\r\n        <NavLink className=\"header__link\" to=\"/sign-in\">Войти</NavLink>\r\n      </Route>\r\n      <Route path=\"/sign-in\">\r\n        <NavLink className=\"header__link\" to=\"/sign-up\">Регистрация</NavLink>\r\n      </Route>\r\n      <Route path=\"/cards\">\r\n        <p className=\"header__email\">{loggedInEmail}</p>\r\n        <button onClick={signOut} type=\"button\" className=\"header__logout\">Выйти</button>\r\n      </Route>\r\n    </nav>\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (loggedIn) {\r\n      setHeaderWidth(headerElement.current.parentElement.clientWidth);\r\n    }\r\n  }, [headerElement, loggedIn]);\r\n\r\n  return (\r\n    <>\r\n    { (headerWidth < 375 && isMenuOpen && loggedIn) ? nav : null }\r\n    <header ref={headerElement} className=\"header\">\r\n      <img className=\"header__logo\" src={logo} alt=\"лого\" />\r\n      { (headerWidth >= 375) ? nav : null }\r\n      { (headerWidth >= 375) ? null : loggedIn ? buttonMenuOpen : nav }\r\n    </header>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Card(props) {\r\n  const { card, onCardClick, onCardLike, onCardDelete } = props;\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  const isOwn = card.owner._id === currentUser._id;\r\n  const cardDeleteButtonClassName = `${isOwn ? 'elements__remove' : 'elements__remove_hidden'}`;\r\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n  const cardLikeButtonClassName = `elements__like ${isLiked ? 'elements__like_active' : ''}`;\r\n\r\n  function handleClick() {\r\n    onCardClick(card);\r\n  }\r\n\r\n  function handleLikeClick() {\r\n    onCardLike(card);\r\n  }\r\n\r\n  function handleDeleteCard() {\r\n    onCardDelete(card);\r\n  }\r\n\r\n  return (\r\n    <div key={card._id} className=\"elements__element\">\r\n      <img onClick={handleClick} className=\"elements__image\" src={card.link} alt={card.name} />\r\n      <button onClick={handleDeleteCard} className={cardDeleteButtonClassName} type=\"button\"></button>\r\n      <div className=\"elements__info\">\r\n        <h3 className=\"elements__name\">{card.name}</h3>\r\n        <div className=\"elements__like-group\">\r\n          <button onClick={handleLikeClick} className={cardLikeButtonClassName} type=\"button\"></button>\r\n          <span className=\"elements__like-counter\">{card.likes.length}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport pencil from '../images/edit-avatar-pencil.svg';\r\nimport Card from './Card';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Main(props) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main>\r\n      <section className=\"profile\">\r\n        <div className=\"profile__info\">\r\n          <button className=\"profile__edit-avatar\" type=\"button\" onClick={props.onEditAvatar}>\r\n            <img className=\"profile__avatar\" src={currentUser.avatar} alt=\"аватар автора\"/>\r\n            <img className=\"profile__pencil\" src={pencil} alt=\"Карандаш\"/>\r\n          </button>\r\n          <div className=\"profile__description\">\r\n            <div className=\"profile__name\">\r\n              <h2 className=\"profile__author\">{currentUser.name}</h2>\r\n              <p className=\"profile__status\">{currentUser.about}</p>\r\n            </div>\r\n            <button className=\"profile__edit\" type=\"button\" onClick={props.onEditProfile}></button>\r\n          </div>\r\n        </div>\r\n        <button className=\"profile__add\" type=\"button\" onClick={props.onAddPlace}></button>\r\n      </section>\r\n\r\n      <section className=\"elements\">\r\n        {props.cards && props.cards.map((card) => (\r\n          <Card key={card._id} card={card} onCardClick={props.onImageClick} onCardLike={props.onCardLike} onCardDelete={props.onCardDelete} />\r\n        ))}\r\n      </section>\r\n      \r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n  return (\r\n    <div id={props.name} className={(props.isOpen ? \"popup popup_opened\" : \"popup\")}>\r\n      <form onSubmit={props.onSubmit} className=\"popup__container popup__container_size_form\" name={props.name} noValidate method=\"post\" action=\"#\">\r\n        <button onClick={props.onClose} className=\"popup__close\" type=\"button\"></button>\r\n        <h2 className=\"popup__title\">{props.title}</h2>\r\n        {props.children}\r\n        <button className=\"popup__submit\" type=\"submit\">{props.submit}</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup(props) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  const nameRef = React.useRef();\r\n  const descriptionRef = React.useRef();\r\n\r\n  function handleChangeName() {\r\n    nameRef.current.focus();\r\n  }\r\n\r\n  function handleChangeDescription() {\r\n    descriptionRef.current.focus();\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    props.onUpdateUser({\r\n      name: nameRef.current.value,\r\n      about: descriptionRef.current.value,\r\n    });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    nameRef.current.value = currentUser.name;\r\n    descriptionRef.current.value = currentUser.about;\r\n  }, [currentUser]);\r\n\r\n  return (\r\n    <PopupWithForm name=\"form-profile\" title=\"Редактировать профиль\" submit=\"Сохранить\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}>\r\n      <input \r\n        onChange={handleChangeName} \r\n        id=\"form-author\" \r\n        className=\"popup__input\" \r\n        type=\"text\" \r\n        name=\"author\"\r\n        ref={nameRef}\r\n        required \r\n        placeholder=\"Ваше имя\" \r\n        pattern=\"[A-Za-zА-Яа-яЁё -]{2,40}\"\r\n      />\r\n      <span className=\"popup__input-error\" id=\"form-author-error\"></span>\r\n      <input \r\n        onChange={handleChangeDescription}\r\n        id=\"form-status\" \r\n        className=\"popup__input\" \r\n        type=\"text\" \r\n        name=\"status\"\r\n        ref={descriptionRef}\r\n        required \r\n        placeholder=\"Ваш статус\" \r\n        pattern=\"[A-Za-zА-Яа-яЁё, -]{2,200}\"\r\n      />\r\n      <span className=\"popup__input-error\" id=\"form-status-error\"></span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditProfilePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction ConfirmationPopup(props) {\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.onSubmit();\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm \r\n      name=\"form-card-remove\" \r\n      title=\"Вы уверены?\" \r\n      submit=\"Да\" \r\n      isOpen={props.isOpen} \r\n      onSubmit={handleSubmit} \r\n      onClose={props.onClose} \r\n    />\r\n  );\r\n}\r\n\r\nexport default ConfirmationPopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction EditAvatarPopup(props) {\r\n  const avatarRef = React.useRef();\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    props.onUpdateAvatar({\r\n      avatar: avatarRef.current.value,\r\n    });\r\n  }\r\n\r\n  function handleCurrentAvatar() {\r\n    avatarRef.current.focus();\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    avatarRef.current.value = currentUser.avatar;\r\n  }, [currentUser]);\r\n\r\n  return (\r\n    <PopupWithForm name=\"form-avatar\" title=\"Обновить аватар\" submit=\"Сохранить\" isOpen={props.isOpen}  onClose={props.onClose} onSubmit={handleSubmit} >\r\n      <input onChange={handleCurrentAvatar} ref={avatarRef} id=\"avatar-link\" className=\"popup__input\" type=\"url\" name=\"link\" required placeholder=\"Ссылка на аватар\"/>\r\n      <span className=\"popup__input-error\" id=\"avatar-link-error\"></span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditAvatarPopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup(props) {\r\n  const [name, setName] = React.useState();\r\n  const [link, setLink] = React.useState();\r\n\r\n  function handleChangeName(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  function handleChangeLink(e) {\r\n    setLink(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    props.onAddPlace({\r\n      name: name,\r\n      link: link,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm name=\"form-card\" title=\"Новое место\" submit=\"Создать\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}>\r\n      <input onChange={handleChangeName} id=\"card-name\" className=\"popup__input\" type=\"text\" name=\"name\" minLength=\"1\" maxLength=\"30\" required placeholder=\"Название\"/>\r\n      <span className=\"popup__input-error\" id=\"card-name-error\"></span>\r\n      <input onChange={handleChangeLink} id=\"card-url\" className=\"popup__input\" type=\"url\" name=\"link\" required placeholder=\"Ссылка на картинку\"/>\r\n      <span className=\"popup__input-error\" id=\"card-url-error\"></span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default AddPlacePopup;","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n  return (\r\n    <div id=\"element-image\" className={(props.isOpen ? \"popup popup_opened\" : \"popup\")}>\r\n      <div className=\"popup__image-container\">\r\n        <button onClick={props.onClose} className=\"popup__close\" type=\"button\"></button>\r\n        <img className=\"popup__image\" src={props.card.link} alt={props.card.name} />\r\n        <h3 className=\"popup__image-name\">{props.card.name}</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;","/*ниже переменные для api*/\r\nexport const token = '5e47c042-6361-4cc1-a7ce-8d80154cfe12';\r\nexport const cohortId = 'cohort-12';\r\n/*ниже переменные для валидации форм*/\r\nexport const formElements = {\r\n  formSelector: '.popup__container',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__submit',\r\n  inactiveButtonClass: 'popup__submit_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__error_visible',\r\n};","import {token, cohortId} from './utils';\r\n\r\nclass Api {\r\n    constructor(options) {\r\n        this._baseUrl = options.baseUrl;\r\n        this._headers = options.headers;\r\n    }\r\n    getProfileInfo() {\r\n        return fetch(this._baseUrl+'users/me', {headers: this._headers})\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n    getCards() {\r\n        return fetch(this._baseUrl+'cards', {headers: this._headers})\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n    deleteCard(id) {\r\n        return fetch(this._baseUrl+'cards/'+id, {\r\n            method: 'DELETE',\r\n            headers: this._headers,\r\n        })\r\n            .then((res) => {\r\n                if(res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n    setProfileUserInfo(name, about) {\r\n        return fetch(this._baseUrl+'users/me', {\r\n            method: 'PATCH', \r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: name,\r\n                about: about\r\n            })\r\n        })\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n    setProfileAvatar(link) {\r\n        return fetch(this._baseUrl+'users/me/avatar', {\r\n            method: 'PATCH', \r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                avatar: link\r\n            })\r\n        })\r\n            .then((res) => {\r\n                if(res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n    addCard(card) {\r\n        return fetch(this._baseUrl+'cards', {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: card.name,\r\n                link: card.link\r\n            })\r\n        })\r\n            .then((res) => {\r\n                if(res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            })\r\n    }\r\n    changeLikeStatus(id, status) {\r\n        return fetch(this._baseUrl+'cards/likes/'+id, {\r\n            method: `${status ? 'PUT' : 'DELETE'}`,\r\n            headers: this._headers,\r\n        })\r\n            .then((res) => {\r\n                if(res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n}\r\n\r\nconst api = new Api({\r\n    baseUrl: `https://mesto.nomoreparties.co/v1/${cohortId}/`,\r\n    headers: {\r\n        authorization: token,\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\nexport default api;","/*ниже класс валидации форм*/\r\nexport default class FormValidator {\r\n    constructor(formObject, formName) {\r\n        this._formName = formName;\r\n        this._inactiveButtonClass = formObject.inactiveButtonClass;\r\n        this._inputErrorClass = formObject.inputErrorClass;\r\n        this._errorClass = formObject.errorClass;\r\n        this._inputList = Array.from(formName.querySelectorAll(formObject.inputSelector));\r\n        this._buttonSubmit = formName.querySelector(formObject.submitButtonSelector);\r\n    }\r\n    _showInputError(inputElement, errorMessage) {  /*показ ошибки валидации*/\r\n        const errorElement = this._formName.querySelector(`#${inputElement.id}-error`);\r\n        inputElement.classList.add(this._inputErrorClass);\r\n        errorElement.textContent = errorMessage;\r\n        errorElement.classList.add(this._errorClass);\r\n    }\r\n    _hideInputError(inputElement) {   /*скрытие ошибки валидации*/\r\n        const errorElement = this._formName.querySelector(`#${inputElement.id}-error`);\r\n        inputElement.classList.remove(this._inputErrorClass);\r\n        errorElement.classList.remove(this._errorClass);\r\n        errorElement.textContent = '';\r\n    }\r\n    _showButtonError() {\r\n        this._buttonSubmit.classList.add(this._inactiveButtonClass);\r\n        this._buttonSubmit.setAttribute('disabled', true);\r\n    }\r\n    _hideButtonError() {\r\n        this._buttonSubmit.classList.remove(this._inactiveButtonClass);\r\n        this._buttonSubmit.removeAttribute('disabled');\r\n    }\r\n    _checkInputValidity(inputElement) {  /*проверка валидации формы*/\r\n        if (!inputElement.validity.valid) {\r\n            this._showInputError(inputElement, inputElement.validationMessage);\r\n        } else {\r\n            this._hideInputError(inputElement);\r\n        }\r\n    }\r\n    _hasInvalidInput() {   /*проверка на неправильную валидацию*/\r\n        return this._inputList.every((inputElement) => inputElement.validity.valid);\r\n    }\r\n    _toggleButtonState() {  /*активация/деактивация кнопки submit*/\r\n        if (this._hasInvalidInput()) {\r\n            this._hideButtonError();\r\n        } else {\r\n            this._showButtonError();\r\n        }\r\n    }\r\n    enableValidation() {       /*запуск валидации*/\r\n        const current = this;\r\n        this._inputList.forEach((inputElement) => {\r\n            inputElement.addEventListener('input', function () {\r\n                current._toggleButtonState();\r\n                current._checkInputValidity(inputElement);\r\n            });\r\n        });\r\n    }\r\n}","import React from 'react';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport ConfirmationPopup from './ConfirmationPopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport ImagePopup from './ImagePopup';\r\nimport api from '../utils/api';\r\nimport FormValidator from '../utils/formValidator';\r\nimport { formElements } from '../utils/utils';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction MainPage () {\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\r\n  const [selectedCard, setSelectedCard] = React.useState(false);\r\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = React.useState(false);\r\n  const [currentCard, setCurrentCard] = React.useState({});\r\n  const [currentUser, setCurrentUser] = React.useState({});\r\n  const [cards, setCards] = React.useState([]);\r\n  const [cardDelete, setCardDelete] = React.useState([]);\r\n\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n\r\n  function handleCardClick() {\r\n    setSelectedCard(true);\r\n  }\r\n\r\n  function openConfirmPopup() {\r\n    setIsConfirmPopupOpen(true);\r\n  }\r\n\r\n\r\n  function setCurrentImage(card) { \r\n    setCurrentCard(card); \r\n    handleCardClick(); \r\n  }\r\n\r\n  function closeAllPopups() {\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsEditAvatarPopupOpen(false);\r\n    setSelectedCard(false);\r\n    setIsConfirmPopupOpen(false);\r\n    setCurrentCard({});\r\n  }\r\n\r\n  function handleUpdateUser(user) {\r\n    api.setProfileUserInfo(user.name, user.about)\r\n    .then((res) => {\r\n      setCurrentUser(res);\r\n      closeAllPopups();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  function handleUpdateAvatar(user) {\r\n    api.setProfileAvatar(user.avatar)\r\n    .then((res) => {\r\n      setCurrentUser(res);\r\n      closeAllPopups();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  function handleCardLike(card) {\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n    api.changeLikeStatus(card._id, !isLiked)\r\n    .then((newCard) => {\r\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\r\n      setCards(newCards);\r\n    });\r\n  }\r\n\r\n  function handleCardDelete(card) {\r\n    setCardDelete(card);\r\n    openConfirmPopup();\r\n  }\r\n\r\n  function handleConfirmDeleteCardSubmit() {\r\n    api.deleteCard(cardDelete._id)\r\n    .then(() => {\r\n      const newCards = cards.filter((i) => i._id !== cardDelete._id);\r\n      setCards(newCards);\r\n      closeAllPopups();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  function handleAddPlaceSubmit(newCard) {\r\n    api.addCard(newCard)\r\n    .then((res) => {\r\n      setCards([...cards, res]);\r\n      closeAllPopups();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    Promise.all([api.getProfileInfo(), api.getCards()])\r\n    .then(([user, cards]) => {\r\n      setCurrentUser(user);\r\n      setCards(cards);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n\r\n    const formProfileValidation = new FormValidator(formElements, document.querySelector('#form-profile')); /*валидация формы профиля*/\r\n    const formAvatarValidation = new FormValidator(formElements, document.querySelector('#form-avatar')); /*валидация формы изменения аватара*/\r\n    const formCardValidation = new FormValidator(formElements, document.querySelector('#form-card')); /*валидация формы добавления карточки*/\r\n    formProfileValidation.enableValidation();\r\n    formAvatarValidation.enableValidation();\r\n    formCardValidation.enableValidation();\r\n  }, []);\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <Main\r\n        onEditProfile={handleEditProfileClick} \r\n        onAddPlace={handleAddPlaceClick} \r\n        onEditAvatar={handleEditAvatarClick} \r\n        onImageClick={setCurrentImage} \r\n        cards={cards} \r\n        onCardLike={handleCardLike} \r\n        onCardDelete={handleCardDelete}\r\n      />\r\n      <Footer />\r\n\r\n      <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\r\n      <EditAvatarPopup isOpen={isEditAvatarPopupOpen}  onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\r\n      <AddPlacePopup isOpen={isAddPlacePopupOpen}  onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\r\n      <ConfirmationPopup isOpen={isConfirmPopupOpen} onSubmit={handleConfirmDeleteCardSubmit} onClose={closeAllPopups} />\r\n      <ImagePopup isOpen={selectedCard} onClose={closeAllPopups} card={currentCard} />\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","export const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\nexport const register = (email, password) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ email, password })\r\n  })\r\n  .then((res) => {\r\n    if(res.ok) {\r\n        return res.json();\r\n    }\r\n    return res.json().then((data) => Promise.reject(`${res.status} - ${data.error || 'Ошибка'}`));\r\n  })\r\n  .catch((err) => console.log(err));\r\n};\r\n\r\nexport const authorize = (email, password) => {\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ email, password })\r\n  })\r\n  .then((res) => {\r\n    if(res.ok) {\r\n        return res.json();\r\n    }\r\n    return res.json().then((data) => Promise.reject(`${res.status} - ${data.error || 'пользователь с email не найден'}`));\r\n  })\r\n  .catch((err) => console.log(err));\r\n};\r\n\r\nexport const getToken = (token) => {\r\n  return fetch(`${BASE_URL}/users/me`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`,\r\n    }\r\n  })\r\n  .then((res) => {\r\n    if(res.ok) {\r\n        return res.json();\r\n    }\r\n    return res.json().then((data) => Promise.reject(`${res.status} - ${data.error || 'токен не передан или передан не в том формате'}`));\r\n  })\r\n  .catch((err) => console.log(err));\r\n};","import React from 'react';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport * as auth from '../utils/auth';\r\n\r\nfunction Register(props) {\r\n  const { successInfoToolTip, openInfoToolTip } = props;\r\n  const [email, setEmail] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n  const history = useHistory();\r\n\r\n  function handleChangeEmail (e) {\r\n    setEmail(e.target.value);\r\n  }\r\n\r\n  function handleChangePassword (e) {\r\n    setPassword(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    auth.register(email, password)\r\n    .then((res) => {\r\n      if (res) {\r\n        successInfoToolTip();\r\n        setTimeout(openInfoToolTip, 1000); //открываем InfoToolTip с задержкой чтобы стили успели смениться\r\n        history.push('/sign-in');\r\n      } else {\r\n        openInfoToolTip();\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"authorization\">\r\n      <form onSubmit={handleSubmit} className=\"authorization__form\" id=\"register\">\r\n        <h2 className=\"authorization__form-header\">Регистрация</h2>\r\n        <input \r\n          onChange={handleChangeEmail}\r\n          type=\"email\" \r\n          className=\"authorization__input\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          required \r\n          placeholder=\"Email\"\r\n        />\r\n        <input \r\n          onChange={handleChangePassword}\r\n          type=\"password\" \r\n          className=\"authorization__input\" \r\n          id=\"password\"\r\n          name=\"password\"\r\n          required\r\n          placeholder=\"Пароль\"\r\n          pattern=\"[A-Za-zА-Яа-яЁё0-9 -]{2,40}\" \r\n        />\r\n        <button type=\"submit\" className=\"authorization__submit\">Зарегистрироваться</button>\r\n        <div className=\"authorization__form-nav\">\r\n          <span>Уже зарегистрированы?&nbsp;</span>\r\n          <NavLink className=\"authorization__form-link\" to=\"/sign-in\">Войти</NavLink>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport * as auth from '../utils/auth';\r\n\r\nfunction Login(props) {\r\n  const { handleLogin, checkToken } = props;\r\n  const [email, setEmail] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n  const history = useHistory();\r\n  \r\n  function handleChangeEmail (e) {\r\n    setEmail(e.target.value);\r\n  }\r\n  function handleChangePassword (e) {\r\n    setPassword(e.target.value);\r\n  }\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (!email || !password) {\r\n      return;\r\n    }\r\n    auth.authorize(email, password)\r\n    .then((data) => {\r\n      if (data.token) {\r\n        localStorage.setItem('token', data.token);\r\n        setEmail('');\r\n        setPassword('');\r\n        handleLogin();\r\n        checkToken();\r\n        history.push('/cards');\r\n      }\r\n    })\r\n    .catch((err) => console.log(err));\r\n  }\r\n\r\n  return (\r\n    <div className=\"authorization\">\r\n      <form onSubmit={handleSubmit} className=\"authorization__form\" id=\"login\">\r\n        <h2 className=\"authorization__form-header\">Вход</h2>\r\n        <input\r\n          onChange={handleChangeEmail} \r\n          type=\"email\" \r\n          className=\"authorization__input\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          required \r\n          placeholder=\"Email\"\r\n        />\r\n        <input\r\n          onChange={handleChangePassword}\r\n          type=\"password\" \r\n          className=\"authorization__input\" \r\n          id=\"password\"\r\n          name=\"password\"\r\n          required\r\n          placeholder=\"Пароль\"\r\n          pattern=\"[A-Za-zА-Яа-яЁё0-9 -]{2,40}\" \r\n        />\r\n        <button type=\"submit\" className=\"authorization__submit\">Войти</button>\r\n        <div className=\"authorization__form-nav\">\r\n          <span>Ещё не зарегистрированы?&nbsp;</span>\r\n          <NavLink className=\"authorization__form-link\" to=\"/sign-up\">Регистрация</NavLink>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport success from '../images/success.svg';\r\nimport error from '../images/error.svg';\r\n\r\nfunction InfoTooltip(props) {\r\n  const { isOpen, onClose, successStyle } = props;\r\n\r\n  return (\r\n    <div id=\"infoTooltip\" className={(isOpen ? \"popup popup_opened\" : \"popup\")}>\r\n      <div className=\"popup__container popup__container_size_tooltip\">\r\n        <button onClick={onClose} className=\"popup__close\" type=\"button\"></button>\r\n        <img className=\"popup__tooltip-image\" src={(successStyle ? success : error)} alt=\"картинка\" />\r\n  <span className=\"popup__tooltip-message\">{successStyle ? 'Вы успешно зарегистрировались!' : 'Что-то пошло не так! Попробуйте ещё раз.'}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InfoTooltip;","import React from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nfunction ProtectedRoute({ component: Component, ...props }) {\r\n  return (\r\n    <Route>\r\n      {\r\n        () => props.loggedIn ? <Component {...props} /> : <Redirect to=\"./sign-in\" />\r\n      }\r\n    </Route>\r\n  );\r\n}\r\n\r\nexport default ProtectedRoute;","import React from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport Header from './Header';\nimport MainPage from './MainPage';\nimport Register from './Register';\nimport Login from './Login';\nimport InfoTooltip from './InfoTooltip';\nimport ProtectedRoute from './ProtectedRoute';\nimport * as auth from '../utils/auth';\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [loggedInEmail, setLoggedInEmail] = React.useState('');\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\n  const [successInfoToolTip, setSuccessInfoToolTip] = React.useState(false);  //стейт для смены стиля InfoToolTip\n  const history = useHistory();\n\n  function handleLogin() {\n    setLoggedIn(true);\n  }\n  function handleSuccessInfoToolTip() {\n    setSuccessInfoToolTip(true);\n  }\n  function handleInfoTooltipOpen() {\n    setIsInfoTooltipOpen(true);\n  }\n  function closeAllPopups() {\n    setIsInfoTooltipOpen(false);\n    setTimeout(setSuccessInfoToolTip, 2000, false);\n  }\n  function signOut () {\n    setLoggedInEmail('');\n    localStorage.removeItem('token');\n    setLoggedIn(false);\n    history.push('/sign-in');\n  }\n  function checkToken() {\n    const token = localStorage.getItem('token');\n    if (token) {\n      auth.getToken(token)\n      .then((res) => {\n        if (res.data) {\n          handleLogin();\n          setLoggedInEmail(res.data.email);\n          history.push('/cards');\n        } else {\n          localStorage.removeItem('token');\n        }\n      });\n    }\n  }\n\n  React.useEffect(() => {\n    checkToken();\n  }, [history]);  // eslint ругается и хочет добавить саму функцию в массив зависимостей, что будет ошибкой, поэтому как то так, функция срабатывает 1 раз - при перезагрузке страницы >)\n                  // папка pages нужна для github-pages, без нее проект не откроется\n  return (\n    <div className=\"page\">\n        <Header loggedInEmail={loggedInEmail} signOut={signOut} loggedIn={loggedIn} />\n        <Switch>\n          <ProtectedRoute path=\"/cards\" loggedIn={loggedIn} component={MainPage} />\n          <Route path=\"/sign-up\">\n            <Register \n              openInfoToolTip={handleInfoTooltipOpen} \n              successInfoToolTip={handleSuccessInfoToolTip} \n            />\n          </Route>\n          <Route path=\"/sign-in\">\n            <Login \n              openInfoToolTip={handleInfoTooltipOpen} \n              successInfoToolTip={handleSuccessInfoToolTip} \n              handleLogin={handleLogin}\n              checkToken={checkToken}\n            />\n          </Route>\n          <ProtectedRoute path=\"/\" loggedIn={loggedIn} component={MainPage} />\n        </Switch>\n        <InfoTooltip isOpen={isInfoTooltipOpen} onClose={closeAllPopups} successStyle={successInfoToolTip} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}